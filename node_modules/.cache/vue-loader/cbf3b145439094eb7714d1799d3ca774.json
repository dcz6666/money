{"remainingRequest":"/Users/cheng/xiedaima/morney/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cheng/xiedaima/morney/src/views/Money.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/cheng/xiedaima/morney/src/views/Money.vue","mtime":1646218538870},{"path":"/Users/cheng/xiedaima/morney/node_modules/cache-loader/dist/cjs.js","mtime":1636385564689},{"path":"/Users/cheng/xiedaima/morney/node_modules/babel-loader/lib/index.js","mtime":1636385564688},{"path":"/Users/cheng/xiedaima/morney/node_modules/ts-loader/index.js","mtime":1636385568108},{"path":"/Users/cheng/xiedaima/morney/node_modules/cache-loader/dist/cjs.js","mtime":1636385564689},{"path":"/Users/cheng/xiedaima/morney/node_modules/vue-loader/lib/index.js","mtime":1636385574867}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCBWdWUgZnJvbSAidnVlIjsKaW1wb3J0IHsgQ29tcG9uZW50LCBXYXRjaCB9IGZyb20gInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiOwppbXBvcnQgTnVtYmVyUGFkIGZyb20gIkAvY29tcG9uZW50cy9Nb25leS9OdW1iZXJQYWQudnVlIjsKaW1wb3J0IFR5cGVzIGZyb20gIkAvY29tcG9uZW50cy9Nb25leS9UeXBlcy52dWUiOwppbXBvcnQgRm9ybUl0ZW0gZnJvbSAiQC9jb21wb25lbnRzL01vbmV5L0Zvcm1JdGVtLnZ1ZSI7CmltcG9ydCBUYWdzIGZyb20gIkAvY29tcG9uZW50cy9Nb25leS9UYWdzLnZ1ZSI7Cgpjb25zdCB7IHJlY29yZExpc3RNb2RlbCB9ID0gcmVxdWlyZSgiQC9tb2RlbHMvcmVjb3JkTGlzdE1vZGVsLnRzIik7CmNvbnN0IHsgdGFnTGlzdE1vZGVsIH0gPSByZXF1aXJlKCJAL21vZGVscy90YWdMaXN0TW9kZWwudHMiKTsKY29uc3QgcmVjb3JkTGlzdCA9IHJlY29yZExpc3RNb2RlbC5mZXRjaCgpOwpjb25zdCB0YWdMaXN0ID0gdGFnTGlzdE1vZGVsLmZldGNoKCk7Cgpjb25zb2xlLmxvZygiPT09dGFnTGlzdD09IiwgdGFnTGlzdCk7CgpAQ29tcG9uZW50KHsKICBjb21wb25lbnRzOiB7IE51bWJlclBhZCwgVHlwZXMsIFRhZ3MsIEZvcm1JdGVtIH0sCn0pCmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1vbmV5IGV4dGVuZHMgVnVlIHsKICB0YWdzID0gdGFnTGlzdDsKICByZWNvcmRMaXN0OiBSZWNvcmRJdGVtW10gPSByZWNvcmRMaXN0OwogIHJlY29yZDogUmVjb3JkSXRlbSA9IHsKICAgIHRhZ3M6IFtdLAogICAgbm90ZXM6ICIiLAogICAgdHlwZTogIi0iLAogICAgYW1vdW50OiAwLAogIH07CiAgb25VcGRhdGVUYWdzKHZhbHVlOiBzdHJpbmdbXSkgewogICAgdGhpcy5yZWNvcmQudGFncyA9IHZhbHVlOwogIH0KICBvblVwZGF0ZU5vdHModmFsdWU6IHN0cmluZykgewogICAgdGhpcy5yZWNvcmQubm90ZXMgPSB2YWx1ZTsKICB9CiAgb25VcGRhdGVBbW91bnQodmFsdWU6IHN0cmluZykgewogICAgdGhpcy5yZWNvcmQuYW1vdW50ID0gcGFyc2VGbG9hdCh2YWx1ZSk7CiAgfQogIHNhdmVSZWNvZGUoKSB7CiAgICByZWNvcmRMaXN0LmNyZWF0ZSh0aGlzLnJlY29yZCkKICB9CiAgQFdhdGNoKCJyZWNvcmRMaXN0IikKICBvblJlY29yZExpc3RDaGFuZ2VkKCkgewogICAgcmVjb3JkTGlzdE1vZGVsLnNhdmUoKTsKICB9Cn0K"},{"version":3,"sources":["Money.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Money.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"nav-wrapper\">\n    <layout classPrefix=\"layout\">\n      <NumberPad @update:value=\"onUpdateAmount\" @submit=\"saveRecode\" />\n      <Types :value.sync=\"record.type\" />\n      <div class=\"notes\">\n        <FormItem\n          field-name=\"备注\"\n          placeholder=\"在这里输入备注\"\n          @update:value=\"onUpdateNots\"\n        />\n      </div>\n      <Tags :data-source.sync=\"tags\" @update:value=\"onUpdateTags\" />\n      <!-- {{record}} -->\n    </layout>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from \"vue\";\nimport { Component, Watch } from \"vue-property-decorator\";\nimport NumberPad from \"@/components/Money/NumberPad.vue\";\nimport Types from \"@/components/Money/Types.vue\";\nimport FormItem from \"@/components/Money/FormItem.vue\";\nimport Tags from \"@/components/Money/Tags.vue\";\n\nconst { recordListModel } = require(\"@/models/recordListModel.ts\");\nconst { tagListModel } = require(\"@/models/tagListModel.ts\");\nconst recordList = recordListModel.fetch();\nconst tagList = tagListModel.fetch();\n\nconsole.log(\"===tagList==\", tagList);\n\n@Component({\n  components: { NumberPad, Types, Tags, FormItem },\n})\nexport default class Money extends Vue {\n  tags = tagList;\n  recordList: RecordItem[] = recordList;\n  record: RecordItem = {\n    tags: [],\n    notes: \"\",\n    type: \"-\",\n    amount: 0,\n  };\n  onUpdateTags(value: string[]) {\n    this.record.tags = value;\n  }\n  onUpdateNots(value: string) {\n    this.record.notes = value;\n  }\n  onUpdateAmount(value: string) {\n    this.record.amount = parseFloat(value);\n  }\n  saveRecode() {\n    recordList.create(this.record)\n  }\n  @Watch(\"recordList\")\n  onRecordListChanged() {\n    recordListModel.save();\n  }\n}\n</script>\n <style lang=\"scss\">\n.layout-content {\n  display: flex;\n  flex-direction: column-reverse;\n}\n.notes{\n  padding:12px 0;\n}\n</style>\n\n<style lang=\"scss\" scoped>\n@import \"~@/assets/style/helper.scss\";\n</style>\n\n\n"]}]}